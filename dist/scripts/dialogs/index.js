export default class o{static dialogModalElements;static dialogWindowElements;dialogCloserAttribute="[data-close-dialog-id]";dialogOpenerAttribute="[data-open-dialog-id]";dialogTogglerAttribute="[data-toggle-dialog-id]";modalDialogAttribute="[data-modal-dialog]";constructor(){this.preSetButtons(document.querySelectorAll(this.dialogOpenerAttribute+","+this.dialogCloserAttribute+","+this.dialogTogglerAttribute)),this.setOpeners(document.querySelectorAll(this.dialogOpenerAttribute)),this.setClosers(document.querySelectorAll(this.dialogCloserAttribute)),this.setTogglers(document.querySelectorAll(this.dialogTogglerAttribute)),o.dialogModalElements=document.querySelectorAll(`dialog${this.modalDialogAttribute}`),o.dialogWindowElements=document.querySelectorAll(`dialog:not(${this.modalDialogAttribute})`)}preSetButtons(t){for(let e of t)this.setAriaExpanded(e),e.setAttribute("aria-controls",e.dataset.toggleDialogId??e.dataset.openDialogId??e.dataset.closeDialogId)}setOpeners(t){for(let e of t)e.addEventListener("click",this.openDialog.bind(this))}setClosers(t){for(let e of t)e.addEventListener("click",this.closeDialog.bind(this))}setTogglers(t){for(let e of t)e.addEventListener("click",l=>{document.getElementById(e.dataset.toggleDialogId)?.open?this.closeDialog(l):this.openDialog(l)})}openDialog(t){let e=t.currentTarget,l=o.getDialogByData(e);if(!(l?.open||l?.nodeName!="DIALOG")){if(l.dataset.modalDialog==null){l.show(),this.toggleAllDependentButtons(l);return}o.closeAllDialogsIfSpecified(e,o.dialogModalElements),l.showModal(),this.toggleBodyScroll(!1,l),this.toggleAllDependentButtons(l),l.dataset.nonClickableBackdrop==null&&l.addEventListener("pointerdown",this.closeByClickOnBackdropEvent.bind(this)),l.addEventListener("cancel",i=>{this.closeDialog(i,i.currentTarget)})}}closeDialog(t,e){let l=t.currentTarget;(!e||e.nodeName!="DIALOG")&&(e=o.getDialogByData(l)),!(!e?.open||e?.nodeName!="DIALOG")&&(e.close(),this.toggleAllDependentButtons(e),e.dataset.modalDialog!=null&&(o.closeAllDialogsIfSpecified(l,o.dialogModalElements),this.toggleBodyScroll(!0,e),e.dataset.nonClickableBackdrop==null&&e.removeEventListener("pointerdown",this.closeByClickOnBackdropEvent.bind(this))))}async toggleBodyScroll(t,e){if(t){if(document.querySelector("dialog[data-modal-dialog][open]"))return;document.body.style.overflow=""}else document.body.style.overflow="hidden"}static getParentDialog(t){return t.closest("dialog")}static getDialogByData(t){let e;return t.dataset.toggleDialogId?e=t.dataset.toggleDialogId:t.dataset.openDialogId?e=t.dataset.openDialogId:t.dataset.closeDialogId&&(e=t.dataset.closeDialogId),document.getElementById(e)??this.getParentDialog(t)}closeByClickOnBackdropEvent(t){let e=t.currentTarget.getBoundingClientRect();e.top<=t.clientY&&t.clientY<=e.top+e.height&&e.left<=t.clientX&&t.clientX<=e.left+e.width||this.closeDialog(t)}setAriaExpanded(t){t.ariaExpanded=o.getDialogByData(t)?.open.toString()}static closeAllDialogsIfSpecified(t,e){if(t.dataset.closeOpenedDialogs!=null)for(let l of e)l.close()}toggleAllDependentButtons(t){for(let e of document.querySelectorAll(`#${t.id} button[data-close-dialog-id],
      button[data-open-dialog-id=${t.id}], 
      button[data-close-dialog-id=${t.id}],
      button[data-toggle-dialog-id=${t.id}]`))this.setAriaExpanded(e)}}new o;
